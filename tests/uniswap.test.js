import assert from 'assert';

import { optimal_ay_in } from '../src/lib/uniswap-v2.js';

describe('uniswap v2', () => {
  describe('optimal y in for two pools', () => {
    it('calculate ay_in for ax,ay,bx,by small', () => {
      let ax = 310000;
      let ay = 210000;
      let bx = 220000;
      let by = 320000;

      let ay_in = optimal_ay_in(ax, ay, bx, by);
      assert.equal(ay_in, 40371);
    });

    it('calculate ay_in for ax,ay,bx,by large', () => {
      // P1 price@s0 0.0000000033283408480408847 ax 8878253473767124253 ay 29549854692 k 262351100068562755522859045076
      // p2 price@s0 0.000000003365382469790152 bx 11445854764436891191 by 38519680728 k 440890671185166697382195667048
      // a 409519212890671181090174108343647301184 (128) b 13688968277808860499057415124610744067188824087232 (163) c 580153512520214066472428128113032560172977728858937834008 (188)
      // delta 188338188550069425005017329637381323792074934213783959739049972285597850189276664094437717040883712 (326) =
      //   d1 187387852510857280153884943391768365671916422748534008304444219745907571064538923441006997945421824 (326) +  d2 950336039212144851132386245612958120158511465249951434605752539690279124737740653430719095461888 (318)
      // 409519212890671181090174108343647301184,13688968277808860499057415124610744067188824087232,580153512520214066472428128113032560172977728858937834008 -> 42327500

      let ax = 8878253473767124253;
      let ay = 29549854692;
      let bx = 11445854764436891191;
      let by = 38519680728;

      let ay_in = optimal_ay_in(ax, ay, bx, by);
      assert.equal(ay_in, 42327500);
    });
  });
});
